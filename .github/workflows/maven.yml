name: build and Deploy to GKE

on:
  push:
    branches:
      - main
      
      
env:
  PROJECT_ID: ${{secrets.USS_GKE_PROJECT}}    
  GKE_CLUSTER: uss-gke-dev-cluster-1
  GKE_ZONE: us-central1
  DEPLOYMENT_NAME: uss-backend-github-actions-gke-deployment
  IMAGE: uss-backend-github-actions-gke-image
  TAG: 1.0.0
  
jobs:
  setup-build-publish-deploy:
    name: Setup Build Publish Deploy
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven
          server-id: github
          settings-path: ${{github.workspace}}
          
      - name: Build with Maven
        run: mvn clean package -DskipTests
       
      - name: Setup Google Cloud CLI
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@0.1.3
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true
        with: 
          service_account_key: ${{secrets.USS_GKE_SA_KEY}}
          project_id: ${{secrets.USS_GKE_PROJECT}}
          
      - name: Configure Docker
        run: |-
          gcloud --quiet auth configure-docker
          
      - name: Get GKE Credentials
        run: |-
          gcloud container clusters get-credentials "$GKE_CLUSTER" --zone "$GKE_ZONE"
          
      - name: Build Docker Image
        run: |-
          docker build --tag "gcr.io/$PROJECT_ID/$IMAGE:$TAG" ./exam-competitor-webparent/exam-competitor-backend/
          
      - name: Pubish Docker Image to GCR
        run: |-
          docker push "gcr.io/$PROJECT_ID/$IMAGE:$TAG"
          
      - name: Set up Kustomize   
        run: |-
          curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize/v4.5.7/kustomize_v4.5.7_linux_amd64.tar.gz
          chmod u+x ./kustomize
          
#      - name: Deploy Image to GKE cluster
#        run: |-
#          ./kustomize edit set image gcr.io/PROJECT_ID/IMAGE:TAG=gcr.io/$PROJECT_ID/$IMAGE:$TAG
#          kubectl apply -k ../../kubectl apply -f -
#          kubectl rollout status deployment/$DEPLOYMENT_NAME
#          kubectl get services -o wide
          
#      - name: Update deploy image
#        working-directory: deploy
#        run: |-
#          cat exam-competitor-webparent/exam-competitor-backend 
#          kustomize edit set image gcr.io/PROJECT_ID/IMAGE:TAG=gcr.io/$PROJECT_ID/$IMAGE:$TAG
#          kustomize build exam-competitor-webparent/exam-competitor-backend/ . | kubectl apply -f -
#          kubectl rollout status deployment/${DEPLOYMENT_NAME}
#          kubectl get services -o wide
        
#        uses: google-github-actions/setup-gcloud@master
#      - name: Build API
#        run: gcloud builds submit gcr.io/$PROJECT_ID/$IMAGE:$TAG
#      - name: Deploy API 
#        run: gcloud run deploy api --image gcr.io/$PROJECT_ID/$IMAGE:$TAG --platform managed --region us-central1 --cluster $GKE_CLUSTER

#      - name: Deploy
#        run: |-
#          kubectl set image deployment dep1 dep1="gcr.io/$PROJECT_ID/$IMAGE:$TAG"


#      - name: Deploy
#        run: |-
#          kustomize edit set image gcr.io/PROJECT_ID/IMAGE:TAG=gcr.io/$PROJECT_ID/$IMAGE:$TAG
#          kubectl apply -k ./exam-competitor-webparent/exam-competitor-backend/
#          kubectl rollout status deployment $IMAGE

      # Deploy the Docker image to the GKE cluster
      - name: Deploy
        run: |-
          ./kustomize edit set image gcr.io/PROJECT_ID/IMAGE:TAG=gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA
          ./kustomize build ~/exam-competitor-webparent/exam-competitor-backend | kubectl apply -f -
          kubectl rollout status deployment/$DEPLOYMENT_NAME
          kubectl get services -o wide
